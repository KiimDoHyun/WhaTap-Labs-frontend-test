[{"C:\\Users\\bzido\\frontend-test\\src\\component\\TestChart1.tsx":"1","C:\\Users\\bzido\\frontend-test\\src\\index.js":"2","C:\\Users\\bzido\\frontend-test\\src\\App.tsx":"3","C:\\Users\\bzido\\frontend-test\\src\\component\\TestChart2.tsx":"4","C:\\Users\\bzido\\frontend-test\\src\\api.js":"5"},{"size":6380,"mtime":1677206713420,"results":"6","hashOfConfig":"7"},{"size":1239,"mtime":1677119962215,"results":"8","hashOfConfig":"7"},{"size":7368,"mtime":1677159058009,"results":"9","hashOfConfig":"7"},{"size":6474,"mtime":1677246427199,"results":"10","hashOfConfig":"7"},{"size":2502,"mtime":1676886050945,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1grk8jl",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bzido\\frontend-test\\src\\component\\TestChart1.tsx",["24","25","26","27","28"],"C:\\Users\\bzido\\frontend-test\\src\\index.js",["29"],"C:\\Users\\bzido\\frontend-test\\src\\App.tsx",["30","31","32","33","34"],"import {\r\n    axisBottom,\r\n    axisLeft,\r\n    axisRight,\r\n    scaleBand,\r\n    scaleLinear,\r\n    select,\r\n} from \"d3\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport api from \"./api\";\r\nimport TestChart1 from \"./component/TestChart1\";\r\nimport TestChart2 from \"./component/TestChart2\";\r\nconst HOUR = 1000 * 60 * 60;\r\n\r\nfunction App() {\r\n    // const [actAgent, setActAgent] = useState<any>();\r\n    // const [httpcSeries, setHttpcSeries] = useState<any>();\r\n\r\n    // useEffect(() => {\r\n    //     // api.spot('act_agent').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('inact_agent').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('host').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('cpucore').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('txcount').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('tps').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('actx').then((result) => {console.log(result); setActAgent(result)})\r\n    //     api.spot(\"rtime\").then((result) => {\r\n    //         console.log(result);\r\n    //         setActAgent(result);\r\n    //     });\r\n    //     // api.spot('cpu').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('threadpool_active').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('threadpool_queue').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('dbc_count').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('dbc_active').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('dbc_idle').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('act_method').then((result) => {console.log(result); setActAgent(result)})\r\n\r\n    /*\r\n    현재시간 기준 5초 동안의 데이터 조회 테스트\r\n\r\n    transaction: 데이터 없음\r\n\r\n    */\r\n\r\n    // }, []);\r\n\r\n    const svgRef = useRef(null);\r\n\r\n    const [data, setData] = useState([\r\n        { x: \"A\", y: 9 },\r\n        { x: \"B\", y: 19 },\r\n        { x: \"C\", y: 29 },\r\n        { x: \"D\", y: 39 },\r\n        { x: \"E\", y: 29 },\r\n    ]);\r\n\r\n    // const onClick = () => {\r\n    //     const rand_0_1 = Math.floor(Math.random() * 2);\r\n\r\n    //     const newData = data.map((item) => ({\r\n    //         ...item,\r\n    //         y: rand_0_1 === 0 ? (item.y += 10) : (item.y -= 10),\r\n    //     }));\r\n\r\n    //     setData(newData);\r\n    //     const svg: any = select(svgRef.current);\r\n\r\n    //     const xScale = scaleBand() // x 축\r\n    //         .domain(newData.map((item) => item.x))\r\n    //         .range([50, 450]);\r\n    //     // .padding(0.5);\r\n\r\n    //     svg.selectAll(\".bar\")\r\n    //         .data(newData)\r\n    //         // css: trasition: 500 과 동일함\r\n    //         .transition()\r\n    //         // .duration(500)\r\n    //         // 모든 데이터가 변경되는 경우 딜레이를 추가할 수 있음.\r\n    //         .delay((d: any, i: any) => i * 100)\r\n    //         .attr(\"class\", \"bar\")\r\n    //         // 첫번째 인자에 배열의 요소가, 두번째 인자에 인덱스가 들어있음.\r\n    //         .attr(\"height\", function (d: any, i: any) {\r\n    //             return d.y * 5;\r\n    //         }) // 높이는 각 값의 *5 만큼 크기로\r\n    //         .attr(\"width\", 25) // 너비는 25로\r\n    //         .attr(\"x\", function (d: any, i: string) {\r\n    //             return xScale(d.x) + 25;\r\n    //         }) // x 위치는 해당 값의 x축의 위치로\r\n    //         .attr(\"y\", function (d: any, i: any) {\r\n    //             return 450 - d.y * 5;\r\n    //         }); // y 는 원래 높이에서 해당 높이를 뺀 만큼\r\n    // };\r\n\r\n    useEffect(() => {\r\n        // 조회 가능한 최소 시간 범위가 5분?\r\n        /*\r\n        시각화 데이터\r\n        time_avg\r\n        time_max\r\n        time_min\r\n        time_std\r\n        time_sum\r\n         */\r\n\r\n        // bar 차트 생성\r\n        const svg: any = select(svgRef.current);\r\n\r\n        const xScale = scaleBand() // x 축\r\n            .domain(data.map((item) => item.x))\r\n            .range([50, 450]);\r\n        // .padding(0.5);\r\n\r\n        const yScale = scaleLinear() // y 축\r\n            .domain([0, 200]) // 실제값의 범위, // 최대값 찾아서 범위 지정?\r\n            .range([450, 50]); // 차트를 그리기 위해 크기를 지정.\r\n\r\n        const xAxis = axisBottom(xScale).ticks(4);\r\n        svg.select(\".x-axis\")\r\n            .style(\"transform\", \"translateY(450px)\")\r\n            .call(xAxis);\r\n\r\n        const yAxis = axisLeft(yScale);\r\n        svg.select(\".y-axis\")\r\n            .attr(\"height\", \"100%\")\r\n            .attr(\"transform\", \"translate(50, 0)\")\r\n            .call(yAxis);\r\n\r\n        // 데이터 수정 관련 transition, duration을 여기에 추가하면 작동하지 않음.\r\n        // 외부 이벤트에서 조작해야 한다?\r\n\r\n        svg.selectAll(\".bar\")\r\n            .data(data)\r\n            .enter()\r\n            .append(\"rect\")\r\n            // 작동 X\r\n            // .transition()\r\n            // .duration(500)\r\n            .attr(\"class\", \"bar\")\r\n            // 첫번째 인자에 배열의 요소가, 두번째 인자에 인덱스가 들어있음.\r\n            .attr(\"height\", function (d: any, i: any) {\r\n                return d.y * 5;\r\n            }) // 높이는 각 값의 *5 만큼 크기로\r\n            .attr(\"width\", 25) // 너비는 25로\r\n            .attr(\"x\", function (d: any, i: string) {\r\n                return xScale(d.x) + 25;\r\n            }) // x 위치는 해당 값의 x축의 위치로\r\n            .attr(\"y\", function (d: any, i: any) {\r\n                return 450 - d.y * 5;\r\n            }); // y 는 원래 높이에서 해당 높이를 뺀 만큼\r\n    }, [data]);\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            {/* 인포메틱스 4개 */}\r\n\r\n            {/* d3로 제작 */}\r\n            {/* 바 차트1 - 트랜잭션 관련 3개 */}\r\n            {/* 바 차트2 - 쓰레드 풀 관련 2개 */}\r\n            {/* json 하나 정해서 라인 \r\n      x: 호출 시간\r\n      y: 호출 값 전부\r\n      */}\r\n            <TestChart1 />\r\n            <TestChart2 />\r\n            <div style={{ height: \"500px\", width: \"500px\" }}>\r\n                <svg ref={svgRef} style={{ height: \"100%\", width: \"100%\" }}>\r\n                    <g className=\"y-axis\" />\r\n                    <g className=\"x-axis\" />\r\n                </svg>\r\n            </div>\r\n            {/* <button onClick={onClick}>데이터 변경</button> */}\r\n\r\n            <h1>Open API (Application)</h1>\r\n            <a\r\n                href=\"https://docs.whatap.io/kr/appendix/open_api_application.pdf\"\r\n                target=\"_blank\"\r\n            >\r\n                가이드 문서\r\n            </a>\r\n            <h2>프로젝트 API 예시</h2>\r\n            <h3>Spot 정보 조회 URL</h3>\r\n            {/* <pre>{JSON.stringify(actAgent, null, 4)}</pre> */}\r\n            <hr />\r\n            <h3>통계 정보 조회 URL</h3>\r\n            {/* <pre>{JSON.stringify(httpcSeries, null, 4)}</pre> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n",["35","36"],"C:\\Users\\bzido\\frontend-test\\src\\component\\TestChart2.tsx",["37","38","39","40","41"],"C:\\Users\\bzido\\frontend-test\\src\\api.js",["42"],{"ruleId":"43","severity":1,"message":"44","line":2,"column":5,"nodeType":"45","messageId":"46","endLine":2,"endColumn":15},{"ruleId":"43","severity":1,"message":"47","line":5,"column":5,"nodeType":"45","messageId":"46","endLine":5,"endColumn":9},{"ruleId":"43","severity":1,"message":"48","line":12,"column":10,"nodeType":"45","messageId":"46","endLine":12,"endColumn":13},{"ruleId":"43","severity":1,"message":"49","line":42,"column":11,"nodeType":"45","messageId":"46","endLine":42,"endColumn":17},{"ruleId":"50","severity":1,"message":"51","line":191,"column":8,"nodeType":"52","endLine":191,"endColumn":10,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":9,"column":5,"nodeType":"45","messageId":"46","endLine":9,"endColumn":14},{"ruleId":"43","severity":1,"message":"56","line":4,"column":5,"nodeType":"45","messageId":"46","endLine":4,"endColumn":14},{"ruleId":"43","severity":1,"message":"57","line":10,"column":8,"nodeType":"45","messageId":"46","endLine":10,"endColumn":11},{"ruleId":"43","severity":1,"message":"58","line":13,"column":7,"nodeType":"45","messageId":"46","endLine":13,"endColumn":11},{"ruleId":"43","severity":1,"message":"59","line":50,"column":18,"nodeType":"45","messageId":"46","endLine":50,"endColumn":25},{"ruleId":"60","severity":1,"message":"61","line":177,"column":17,"nodeType":"62","endLine":177,"endColumn":32},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"43","severity":1,"message":"67","line":9,"column":5,"nodeType":"45","messageId":"46","endLine":9,"endColumn":17},{"ruleId":"43","severity":1,"message":"68","line":15,"column":5,"nodeType":"45","messageId":"46","endLine":15,"endColumn":14},{"ruleId":"43","severity":1,"message":"69","line":22,"column":12,"nodeType":"45","messageId":"46","endLine":22,"endColumn":16},{"ruleId":"43","severity":1,"message":"59","line":22,"column":18,"nodeType":"45","messageId":"46","endLine":22,"endColumn":25},{"ruleId":"43","severity":1,"message":"70","line":24,"column":11,"nodeType":"45","messageId":"46","endLine":24,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":85,"column":1,"nodeType":"73","endLine":85,"endColumn":33},"@typescript-eslint/no-unused-vars","'axisBottom' is defined but never used.","Identifier","unusedVar","'line' is defined but never used.","'arr' is defined but never used.","'apiObj' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-unused-vars","'isWorking' is assigned a value but never used.","'axisRight' is defined but never used.","'api' is defined but never used.","'HOUR' is assigned a value but never used.","'setData' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"'randomNormal' is defined but never used.","'timeParse' is defined but never used.","'data' is assigned a value but never used.","'draw1' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"77","fix":"78"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [data]",{"range":"79","text":"80"},[5403,5405],"[data]"]