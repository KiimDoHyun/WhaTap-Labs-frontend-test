[{"C:\\Users\\bzido\\frontend-test\\src\\index.js":"1","C:\\Users\\bzido\\frontend-test\\src\\App.tsx":"2","C:\\Users\\bzido\\frontend-test\\src\\reportWebVitals.js":"3","C:\\Users\\bzido\\frontend-test\\src\\component\\Widget.tsx":"4","C:\\Users\\bzido\\frontend-test\\src\\hook\\useResize.tsx":"5","C:\\Users\\bzido\\frontend-test\\src\\component\\Widget\\WidgetModal.tsx":"6","C:\\Users\\bzido\\frontend-test\\src\\page\\Dashboard.tsx":"7","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader.tsx":"8","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\DateBox.tsx":"9","C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\InformaticsChart\\InforMaticsBox.tsx":"10","C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\BarChart.tsx":"11","C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\LineChart.tsx":"12","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\RealTime.tsx":"13","C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\InformaticsChart.tsx":"14","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\CurrentTime.tsx":"15","C:\\Users\\bzido\\frontend-test\\src\\router\\Router.tsx":"16","C:\\Users\\bzido\\frontend-test\\src\\component\\common\\DatePicker\\ListPicker.tsx":"17","C:\\Users\\bzido\\frontend-test\\src\\common\\date.ts":"18","C:\\Users\\bzido\\frontend-test\\src\\store\\DashboardProvider.tsx":"19","C:\\Users\\bzido\\frontend-test\\src\\component\\common\\DatePicker.tsx":"20","C:\\Users\\bzido\\frontend-test\\src\\hook\\useOutsideClick.tsx":"21","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\DatePickerArea.tsx":"22","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\SelectRealTimeRangeArea.tsx":"23","C:\\Users\\bzido\\frontend-test\\src\\hook\\useBoolean.tsx":"24","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\SelectRealTimeListItem.tsx":"25","C:\\Users\\bzido\\frontend-test\\src\\common\\chart.ts":"26","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\CommonStyle.ts":"27","C:\\Users\\bzido\\frontend-test\\src\\api.ts":"28","C:\\Users\\bzido\\frontend-test\\src\\store\\WidgetProvider.tsx":"29","C:\\Users\\bzido\\frontend-test\\src\\component\\Widget\\WidgetChart.tsx":"30","C:\\Users\\bzido\\frontend-test\\src\\common\\widget.ts":"31","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\WidgetPropsSettingModal.tsx":"32"},{"size":2059,"mtime":1678167166665,"results":"33","hashOfConfig":"34"},{"size":408,"mtime":1678148237133,"results":"35","hashOfConfig":"34"},{"size":375,"mtime":1676852251020,"results":"36","hashOfConfig":"34"},{"size":6598,"mtime":1678230812627,"results":"37","hashOfConfig":"34"},{"size":1051,"mtime":1677421584514,"results":"38","hashOfConfig":"34"},{"size":1364,"mtime":1678168719169,"results":"39","hashOfConfig":"34"},{"size":2813,"mtime":1678240036751,"results":"40","hashOfConfig":"34"},{"size":2189,"mtime":1678239615819,"results":"41","hashOfConfig":"34"},{"size":568,"mtime":1678074907916,"results":"42","hashOfConfig":"34"},{"size":687,"mtime":1678074907931,"results":"43","hashOfConfig":"34"},{"size":4534,"mtime":1678197864418,"results":"44","hashOfConfig":"34"},{"size":3175,"mtime":1678197920656,"results":"45","hashOfConfig":"34"},{"size":632,"mtime":1678074907919,"results":"46","hashOfConfig":"34"},{"size":743,"mtime":1678198650508,"results":"47","hashOfConfig":"34"},{"size":1024,"mtime":1678074907914,"results":"48","hashOfConfig":"34"},{"size":266,"mtime":1678074907943,"results":"49","hashOfConfig":"34"},{"size":1599,"mtime":1678074907935,"results":"50","hashOfConfig":"34"},{"size":929,"mtime":1678185126514,"results":"51","hashOfConfig":"34"},{"size":1017,"mtime":1678238820938,"results":"52","hashOfConfig":"34"},{"size":2097,"mtime":1677940990156,"results":"53","hashOfConfig":"34"},{"size":620,"mtime":1678074907938,"results":"54","hashOfConfig":"34"},{"size":3093,"mtime":1678169357787,"results":"55","hashOfConfig":"34"},{"size":2348,"mtime":1678186537791,"results":"56","hashOfConfig":"34"},{"size":684,"mtime":1678074907937,"results":"57","hashOfConfig":"34"},{"size":1028,"mtime":1678012971654,"results":"58","hashOfConfig":"34"},{"size":3070,"mtime":1678074907908,"results":"59","hashOfConfig":"34"},{"size":634,"mtime":1678169331630,"results":"60","hashOfConfig":"34"},{"size":2972,"mtime":1678183982316,"results":"61","hashOfConfig":"34"},{"size":1385,"mtime":1678195912023,"results":"62","hashOfConfig":"34"},{"size":973,"mtime":1678197464562,"results":"63","hashOfConfig":"34"},{"size":72,"mtime":1678168115866,"results":"64","hashOfConfig":"34"},{"size":2933,"mtime":1678255595495,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1grk8jl",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bzido\\frontend-test\\src\\index.js",[],["138","139"],"C:\\Users\\bzido\\frontend-test\\src\\App.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\reportWebVitals.js",[],["140","141"],"C:\\Users\\bzido\\frontend-test\\src\\component\\Widget.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\hook\\useResize.tsx",["142"],"import React, { RefObject, useState, useEffect } from \"react\";\r\nimport debounce from \"lodash/debounce\";\r\n\r\nconst useResize = (ref: RefObject<HTMLDivElement>) => {\r\n    const [state, setState] = useState({ width: 0, height: 0 });\r\n\r\n    useEffect(() => {\r\n        /*\r\n        resize 마다 이벤트를 발생시켜 svg를 매번 다시 그리면 요구되는 작업량이 많기 때문에\r\n        debounce로 과도한 요청을 방지한다.\r\n\r\n        디바운스 단위시간: 0.3초\r\n        */\r\n        const getSize = debounce(() => {\r\n            if (!ref || !ref.current) {\r\n                return;\r\n            }\r\n            const width = ref.current.offsetWidth;\r\n            const height = ref.current.offsetHeight;\r\n            setState({\r\n                width,\r\n                height,\r\n            });\r\n        }, 300);\r\n\r\n        window.addEventListener(\"resize\", getSize);\r\n        getSize();\r\n        return () => window.removeEventListener(\"resize\", getSize);\r\n    }, [ref]);\r\n    return state;\r\n};\r\n\r\nexport default useResize;\r\n",["143","144"],"C:\\Users\\bzido\\frontend-test\\src\\component\\Widget\\WidgetModal.tsx",[],["145","146"],"C:\\Users\\bzido\\frontend-test\\src\\page\\Dashboard.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\DateBox.tsx",[],["147","148"],"C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\InformaticsChart\\InforMaticsBox.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\BarChart.tsx",["149","150","151","152"],"import { select } from \"d3\";\r\nimport React, { useEffect, useRef, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n    calcNewSize,\r\n    createBarXScale,\r\n    createBarYScale,\r\n    drawBarXAxis,\r\n    drawBaryAxis,\r\n} from \"../../common/chart\";\r\nimport useResize from \"../../hook/useResize\";\r\nimport { WidgetStateContext } from \"../../store/WidgetProvider\";\r\nimport {\r\n    BarChartPropsType,\r\n    ChartPropsType,\r\n    dataSourceType,\r\n} from \"../../types/chart\";\r\n\r\nconst margin = { top: 20, right: 20, bottom: 20, left: 70 };\r\n\r\nlet data: dataSourceType[] = [];\r\n\r\nconst yAxisStyle = {\r\n    width: \"100%\",\r\n    transform: `translate(${margin.left}, 0)`,\r\n    opacity: 0,\r\n};\r\n\r\nconst xAxisStyle = {\r\n    height: \"100%\",\r\n    transform: `translate(${margin.left}, ${margin.bottom})`,\r\n};\r\n\r\nconst Chart = React.memo(({ svgRef }: ChartPropsType) => {\r\n    return (\r\n        <svg ref={svgRef}>\r\n            <g className=\"y-axis\" {...yAxisStyle} />\r\n            <g className=\"x-axis\" {...xAxisStyle} />\r\n        </svg>\r\n    );\r\n});\r\n\r\nconst BarChart = ({ dataSource, apiInfo }: any) => {\r\n    const svgRef = useRef(null);\r\n    const svgParentBoxRef = useRef(null);\r\n    const size = useResize(svgParentBoxRef);\r\n    // const chartProps = useContext(WidgetStateContext);\r\n\r\n    // Chart Render\r\n    const renderChart = (width: number, height: number, type: string) => {\r\n        const svg: any = select(svgRef.current);\r\n\r\n        // name : left\r\n        const xScale = createBarXScale(data, height);\r\n        drawBarXAxis(svg, xScale);\r\n\r\n        // value : top\r\n        const yScale = createBarYScale(data, width);\r\n        drawBaryAxis(svg, yScale);\r\n\r\n        if (type === \"INIT\") {\r\n            const bar = svg\r\n                .selectAll(\".item\")\r\n                .data(data)\r\n                .enter()\r\n                .append(\"g\")\r\n                .attr(\"class\", \"item\");\r\n\r\n            // 바 생성\r\n            bar.append(\"rect\")\r\n                .attr(\"class\", \"bar\")\r\n                .attr(\"height\", 20) // 너비는 20로\r\n                .attr(\"x\", margin.left)\r\n                .attr(\"transform\", `translate(0, ${margin.bottom})`)\r\n                .attr(\"y\", function (d: dataSourceType) {\r\n                    return xScale(d.name) + height / 10 - 10;\r\n                });\r\n\r\n            // 텍스트가 들어갈 요소 생성\r\n            bar.append(\"text\")\r\n                .attr(\"class\", \"text\")\r\n                .attr(\"x\", margin.left + 10)\r\n                .attr(\"fill\", \"#919191\")\r\n                .attr(\"transform\", `translate(0, ${margin.bottom})`)\r\n                .attr(\"y\", function (d: dataSourceType) {\r\n                    return xScale(d.name) + height / 10 + 6;\r\n                });\r\n        } else if (type === \"DRAW\") {\r\n            svg.selectAll(\".bar\")\r\n                .data(data)\r\n                .transition()\r\n                .duration(500)\r\n                .attr(\"y\", function (d: dataSourceType) {\r\n                    return xScale(d.name) + height / 10 - 10;\r\n                })\r\n                .attr(\"width\", function (d: dataSourceType) {\r\n                    return yScale(d.data);\r\n                });\r\n\r\n            svg.selectAll(\".text\")\r\n                .data(data)\r\n                .transition()\r\n                .duration(500)\r\n                .attr(\"y\", function (d: dataSourceType) {\r\n                    return xScale(d.name) + height / 10 + 6;\r\n                })\r\n                .text((d: dataSourceType) => d.data);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        data = [...dataSource];\r\n\r\n        const {\r\n            current: { offsetWidth, offsetHeight },\r\n        } = svgParentBoxRef;\r\n\r\n        const [newWidth, newHeight] = calcNewSize(\r\n            margin,\r\n            offsetWidth,\r\n            offsetHeight\r\n        );\r\n\r\n        renderChart(newWidth, newHeight, \"INIT\");\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const { width, height } = size;\r\n        data = [...dataSource];\r\n\r\n        svgRef.current.style.width = width;\r\n        svgRef.current.style.height = height;\r\n\r\n        const [newWidth, newHeight] = calcNewSize(margin, width, height);\r\n\r\n        renderChart(newWidth, newHeight, \"DRAW\");\r\n    }, [size, dataSource]);\r\n\r\n    return (\r\n        <BarChartBox ref={svgParentBoxRef}>\r\n            <Chart svgRef={svgRef} />\r\n        </BarChartBox>\r\n    );\r\n};\r\nconst BarChartBox = styled.div`\r\n    width: 100%;\r\n\r\n    min-width: 250px;\r\n    min-height: 300px;\r\n\r\n    position: relative;\r\n`;\r\n\r\nexport default BarChart;\r\n","C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\LineChart.tsx",["153","154","155","156","157"],"C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\RealTime.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\InformaticsChart.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\CurrentTime.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\router\\Router.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\common\\DatePicker\\ListPicker.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\common\\date.ts",[],"C:\\Users\\bzido\\frontend-test\\src\\store\\DashboardProvider.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\common\\DatePicker.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\hook\\useOutsideClick.tsx",["158"],"C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\DatePickerArea.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\SelectRealTimeRangeArea.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\hook\\useBoolean.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\SelectRealTimeListItem.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\common\\chart.ts",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\CommonStyle.ts",[],"C:\\Users\\bzido\\frontend-test\\src\\api.ts",["159"],"import { DataType, OPEN_APIType } from \"./types/api\";\r\n\r\nconst DEMO_PROJECT_API_TOCKEN = \"XGJHUSQZTI2AVIENWA27HI5V\";\r\nconst DEMO_PROJECT_CODE = \"5490\";\r\nconst OPEN_API_HEADERS: HeadersInit = {\r\n    \"x-whatap-pcode\": DEMO_PROJECT_CODE,\r\n    \"x-whatap-token\": DEMO_PROJECT_API_TOCKEN,\r\n};\r\n\r\nconst OPEN_API_ROOT = \"https://api.whatap.io/open/api\";\r\n\r\nexport const OPEN_API: OPEN_APIType = {\r\n    \"\": {\r\n        // 몇개 정해서 인포매틱스로?\r\n        act_agent: \"활성화 상태의 에이전트 수\",\r\n        inact_agent: \"비활성화 상태의 에이전트 수\",\r\n        host: \"호스트 수\",\r\n        cpucore: \"호스트의 CPU 코어 합\",\r\n\r\n        // 트랜잭션 관련\r\n        txcount: \"트랜잭션 수\",\r\n        tps: \"초당 트랜잭션 수\",\r\n        actx: \"액티브 트랜잭션 수\",\r\n\r\n        // 기타\r\n        user: \"5분간 집계된 고유 사용자 수\",\r\n        rtime: \"평균 응답 시간\",\r\n        cpu: \"CPU 사용률\",\r\n\r\n        // 쓰레드 풀 관련\r\n        threadpool_active: \"쓰레드풀 활성 쓰레드 수\",\r\n        threadpool_queue: \"쓰레드풀 큐잉 쓰레드 수\",\r\n\r\n        // DB 관련?\r\n        dbc_count: \"전체 DB Connection 수\",\r\n        dbc_active: \"활성(Active) DB Connection 수\",\r\n        dbc_idle: \"비활성(Idle) DB Connection 수\",\r\n\r\n        // Active 관련?\r\n        act_method: \"액티브 Method 수\",\r\n        act_sql: \"액티브 SQL 수\",\r\n        act_httpc: \"액티브 HTTP Call 수\",\r\n        act_dbc: \"액티브 DB Connection 수\",\r\n        act_socket: \"액티브 Socket 수\",\r\n    },\r\n\r\n    // 하나 정해서 라인차트로\r\n    json: {\r\n        \"exception/{stime}/{etime}\": \"Exception 발생\",\r\n        \"sql/{stime}/{etime}\": \"SQL\",\r\n        \"httpc/{stime}/{etime}\": \"HTTP 외부호출\",\r\n        \"remote/{stime}/{etime}\": \"client IP\",\r\n        \"transaction/{stime}/{etime}\": \"트랜잭션\",\r\n    },\r\n};\r\nconst getPath = (url: string, param: any = {}) => {\r\n    let path = url;\r\n    for (let key in param) {\r\n        path = path.replace(new RegExp(\"\\\\{\" + key + \"\\\\}\", \"g\"), param[key]);\r\n    }\r\n\r\n    return path;\r\n};\r\n\r\nconst getOpenApi = (type: string) => (key: string, param?: any) =>\r\n    new Promise((resolve, reject) => {\r\n        if (key in OPEN_API[type]) {\r\n            return resolve({\r\n                url: [OPEN_API_ROOT, type, key]\r\n                    .filter((path) => !!path)\r\n                    .join(\"/\"),\r\n                name: OPEN_API[type][key],\r\n            });\r\n        } else {\r\n            reject(\"잘못된 API 정보\");\r\n        }\r\n    }).then(({ url, name }: any) =>\r\n        fetch(getPath(url, param), {\r\n            headers: OPEN_API_HEADERS,\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data: DataType) => ({\r\n                key,\r\n                name,\r\n                data,\r\n            }))\r\n    );\r\n\r\nconst spot = getOpenApi(\"\");\r\nconst series = getOpenApi(\"json\");\r\n\r\nexport default { spot, series };\r\n","C:\\Users\\bzido\\frontend-test\\src\\store\\WidgetProvider.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\Widget\\WidgetChart.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\common\\widget.ts",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\WidgetPropsSettingModal.tsx",["160"],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"161","replacedBy":"165"},{"ruleId":"163","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":1,"column":8,"nodeType":"169","messageId":"170","endLine":1,"endColumn":13},{"ruleId":"161","replacedBy":"171"},{"ruleId":"163","replacedBy":"172"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"161","replacedBy":"165"},{"ruleId":"163","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"173","line":2,"column":36,"nodeType":"169","messageId":"170","endLine":2,"endColumn":46},{"ruleId":"167","severity":1,"message":"174","line":12,"column":10,"nodeType":"169","messageId":"170","endLine":12,"endColumn":28},{"ruleId":"167","severity":1,"message":"175","line":14,"column":5,"nodeType":"169","messageId":"170","endLine":14,"endColumn":22},{"ruleId":"176","severity":1,"message":"177","line":125,"column":8,"nodeType":"178","endLine":125,"endColumn":10,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"173","line":2,"column":36,"nodeType":"169","messageId":"170","endLine":2,"endColumn":46},{"ruleId":"167","severity":1,"message":"180","line":13,"column":5,"nodeType":"169","messageId":"170","endLine":13,"endColumn":24},{"ruleId":"167","severity":1,"message":"174","line":14,"column":5,"nodeType":"169","messageId":"170","endLine":14,"endColumn":23},{"ruleId":"167","severity":1,"message":"181","line":44,"column":11,"nodeType":"169","messageId":"170","endLine":44,"endColumn":29},{"ruleId":"176","severity":1,"message":"182","line":105,"column":8,"nodeType":"178","endLine":105,"endColumn":23,"suggestions":"183"},{"ruleId":"176","severity":1,"message":"184","line":18,"column":8,"nodeType":"178","endLine":18,"endColumn":13,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":92,"column":1,"nodeType":"188","endLine":92,"endColumn":33},{"ruleId":"176","severity":1,"message":"189","line":38,"column":8,"nodeType":"178","endLine":38,"endColumn":18,"suggestions":"190"},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],["191"],["192"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar",["191"],["192"],"'useContext' is defined but never used.","'WidgetStateContext' is defined but never used.","'BarChartPropsType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dataSource'. Either include it or remove the dependency array.","ArrayExpression",["193"],"'WidgetSetterContext' is defined but never used.","'LineChartPropsType' is defined but never used.","React Hook useEffect has a missing dependency: 'renderChart'. Either include it or remove the dependency array.",["194"],"React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["195"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useMemo has an unnecessary dependency: 'OPEN_API'. Either exclude it or remove the dependency array. Outer scope values like 'OPEN_API' aren't valid dependencies because mutating them doesn't re-render the component.",["196"],"no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [dataSource]",{"range":"205","text":"206"},"Update the dependencies array to be: [apiInfo, renderChart, size]",{"range":"207","text":"208"},"Update the dependencies array to be: [callback, ref]",{"range":"209","text":"210"},"Update the dependencies array to be: []",{"range":"211","text":"212"},[3845,3847],"[dataSource]",[2831,2846],"[apiInfo, renderChart, size]",[553,558],"[callback, ref]",[909,919],"[]"]