[{"C:\\Users\\bzido\\frontend-test\\src\\index.js":"1","C:\\Users\\bzido\\frontend-test\\src\\App.tsx":"2","C:\\Users\\bzido\\frontend-test\\src\\component\\TestChart2.tsx":"3","C:\\Users\\bzido\\frontend-test\\src\\api.js":"4","C:\\Users\\bzido\\frontend-test\\src\\reportWebVitals.js":"5","C:\\Users\\bzido\\frontend-test\\src\\component\\TestChart3.tsx":"6","C:\\Users\\bzido\\frontend-test\\src\\component\\BarChart.tsx":"7"},{"size":1348,"mtime":1677390193455,"results":"8","hashOfConfig":"9"},{"size":4975,"mtime":1677421584509,"results":"10","hashOfConfig":"9"},{"size":5714,"mtime":1677415808834,"results":"11","hashOfConfig":"9"},{"size":2502,"mtime":1676886050945,"results":"12","hashOfConfig":"9"},{"size":375,"mtime":1676852251020,"results":"13","hashOfConfig":"9"},{"size":2559,"mtime":1677406645102,"results":"14","hashOfConfig":"9"},{"size":6464,"mtime":1677466492164,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1grk8jl",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bzido\\frontend-test\\src\\index.js",[],["33","34"],"C:\\Users\\bzido\\frontend-test\\src\\App.tsx",["35","36","37"],"import api from \"./api\";\r\nimport TestChart1 from \"./component/TestChart1\";\r\nimport TestChart2 from \"./component/TestChart2\";\r\nimport TestChart3 from \"./component/TestChart3\";\r\nimport styled from \"styled-components\";\r\nconst HOUR = 1000 * 60 * 60;\r\n/*\r\nTodo: 디자인 (전체 레이아웃, 반응형)\r\n*/\r\nfunction App() {\r\n    // const [actAgent, setActAgent] = useState<any>();\r\n    // const [httpcSeries, setHttpcSeries] = useState<any>();\r\n\r\n    // useEffect(() => {\r\n    //     // api.spot('act_agent').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('inact_agent').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('host').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('cpucore').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('txcount').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('tps').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('actx').then((result) => {console.log(result); setActAgent(result)})\r\n    //     api.spot(\"rtime\").then((result) => {\r\n    //         console.log(result);\r\n    //         setActAgent(result);\r\n    //     });\r\n    //     // api.spot('cpu').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('threadpool_active').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('threadpool_queue').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('dbc_count').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('dbc_active').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('dbc_idle').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('act_method').then((result) => {console.log(result); setActAgent(result)})\r\n\r\n    /*\r\n    현재시간 기준 5초 동안의 데이터 조회 테스트\r\n\r\n    transaction: 데이터 없음\r\n\r\n    */\r\n\r\n    // }, []);\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            {/* 인포메틱스 4개 */}\r\n\r\n            {/* d3로 제작 */}\r\n            {/* 바 차트1 - 트랜잭션 관련 3개 */}\r\n            {/* 바 차트2 - 쓰레드 풀 관련 2개 */}\r\n            {/* json 하나 정해서 라인 \r\n      x: 호출 시간\r\n      y: 호출 값 전부\r\n      */}\r\n\r\n            {/* <TestChart3 /> */}\r\n\r\n            {/* \r\n            한줄에 모두 표시한다.\r\n\r\n            1. 12칸으로 나눈다.\r\n\r\n            1:5:6 으로 차지한다.\r\n\r\n            화면이 작아지면\r\n            1:11:12 로 변경된다.\r\n\r\n            더 작아지면\r\n\r\n            12:12:12 로\r\n            각 차트가 차지하는 칸 크기에 맞춰서 차트가 업데이트 된다.\r\n\r\n            2. wrap 을 고려하지 않는다.\r\n\r\n            한줄에 놓인 각 컴포넌트를 % 비율로 가지고 있도록한다.\r\n\r\n            전체 컨테이너의 최소 크기를 지정한다: 1024px\r\n\r\n\r\n            직접 구현할지 외부 라이브러리를 사용할지\r\n\r\n            차트를 직접 만드는데 스타일은 외부라이브러리로?\r\n            차트를 직접 만드는데 스타일도 직접?\r\n            */}\r\n\r\n            <TestArea>\r\n                <TestRow>\r\n                    <TestCol className=\"width10\">\r\n                        <TestChart3 />\r\n                    </TestCol>\r\n                    <TestCol className=\"width40\">\r\n                        <TestChart1 />\r\n                    </TestCol>\r\n                    <TestCol className=\"width50\">\r\n                        <TestChart2 />\r\n                    </TestCol>\r\n                </TestRow>\r\n            </TestArea>\r\n\r\n            {/* <h1>Open API (Application)</h1>\r\n            <a\r\n                href=\"https://docs.whatap.io/kr/appendix/open_api_application.pdf\"\r\n                target=\"_blank\"\r\n            >\r\n                가이드 문서\r\n            </a>\r\n            <h2>프로젝트 API 예시</h2>\r\n            <h3>Spot 정보 조회 URL</h3>\r\n            <pre>{JSON.stringify(actAgent, null, 4)}</pre>\r\n            <hr />\r\n            <h3>통계 정보 조회 URL</h3>\r\n            <pre>{JSON.stringify(httpcSeries, null, 4)}</pre> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst TestArea = styled.div`\r\n    width: 100%;\r\n    border: 1px solid;\r\n    box-sizing: border-box;\r\n\r\n    min-width: 1024px;\r\n`;\r\n\r\nconst TestRow = styled.div`\r\n    width: 100%;\r\n    height: 400px;\r\n    display: flex;\r\n    gap: 10px;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n\r\n    .width10 {\r\n        width: 10%;\r\n    }\r\n\r\n    .width40 {\r\n        width: 40%;\r\n    }\r\n\r\n    .width50 {\r\n        width: 50%;\r\n    }\r\n`;\r\nconst TestCol = styled.div`\r\n    height: 100%;\r\n    padding: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Box = styled.div``;\r\n\r\nexport default App;\r\n","C:\\Users\\bzido\\frontend-test\\src\\component\\TestChart2.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\api.js",["38"],"const DEMO_PROJECT_API_TOCKEN = 'XGJHUSQZTI2AVIENWA27HI5V';\r\nconst DEMO_PROJECT_CODE = 5490;\r\nconst OPEN_API_HEADERS = {\r\n  'x-whatap-pcode': DEMO_PROJECT_CODE,\r\n  'x-whatap-token': DEMO_PROJECT_API_TOCKEN,\r\n};\r\n\r\nconst OPEN_API_ROOT = 'https://api.whatap.io/open/api';\r\n\r\nconst OPEN_API = {\r\n  '': {\r\n    // 몇개 정해서 인포매틱스로?\r\n    act_agent: '활성화 상태의 에이전트 수',\r\n    inact_agent: '비활성화 상태의 에이전트 수',\r\n    host: '호스트 수',\r\n    cpucore: '호스트의 CPU 코어 합',\r\n\r\n    // 트랜잭션 관련\r\n    txcount: '트랜잭션 수',\r\n    tps: '초당 트랜잭션 수',\r\n    actx: '액티브 트랜잭션 수',\r\n\r\n    // 기타\r\n    user: '5분간 집계된 고유 사용자 수',\r\n    rtime: '평균 응답 시간',\r\n    cpu: 'CPU 사용률',\r\n\r\n    // 쓰레드 풀 관련\r\n    threadpool_active: '쓰레드풀 활성 쓰레드 수',\r\n    threadpool_queue: '쓰레드풀 큐잉 쓰레드 수',\r\n\r\n    // DB 관련?\r\n    dbc_count: '전체 DB Connection 수',\r\n    dbc_active: '활성(Active) DB Connection 수',\r\n    dbc_idle: '비활성(Idle) DB Connection 수',\r\n\r\n    // Active 관련?\r\n    act_method: '액티브 Method 수',\r\n    act_sql: '액티브 SQL 수',\r\n    act_httpc: '액티브 HTTP Call 수',\r\n    act_dbc: '액티브 DB Connection 수',\r\n    act_socket: '액티브 Socket 수',\r\n  },\r\n\r\n  // 하나 정해서 라인차트로\r\n  json: {\r\n    'exception/{stime}/{etime}': 'Exception 발생',\r\n    'sql/{stime}/{etime}': 'SQL',\r\n    'httpc/{stime}/{etime}': 'HTTP 외부호출',\r\n    'remote/{stime}/{etime}': 'client IP',\r\n    'transaction/{stime}/{etime}': '트랜잭션',\r\n  },\r\n};\r\nconst getPath = (url, param = {}) => {\r\n  let path = url;\r\n  for (let key in param) {\r\n    path = path.replace(new RegExp('\\\\{' + key + '\\\\}', 'g'), param[key]);\r\n  }\r\n\r\n  return path;\r\n};\r\n\r\nconst getOpenApi = (type) => (key, param) =>\r\n  new Promise((resolve, reject) => {\r\n    if (key in OPEN_API[type]) {\r\n      return resolve({ url: [OPEN_API_ROOT, type, key].filter((path) => !!path).join('/'), name: OPEN_API[type][key] });\r\n    } else {\r\n      reject('잘못된 API 정보');\r\n    }\r\n  }).then(({ url, name }) =>\r\n    fetch(getPath(url, param), {\r\n      headers: OPEN_API_HEADERS,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => ({\r\n        key,\r\n        name,\r\n        data,\r\n      })),\r\n  );\r\n\r\nconst spot = getOpenApi('');\r\nconst series = getOpenApi('json');\r\n\r\nexport default { spot, series };\r\n","C:\\Users\\bzido\\frontend-test\\src\\reportWebVitals.js",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\TestChart3.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\BarChart.tsx",["39","40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":11},{"ruleId":"46","severity":1,"message":"50","line":6,"column":7,"nodeType":"48","messageId":"49","endLine":6,"endColumn":11},{"ruleId":"46","severity":1,"message":"51","line":150,"column":7,"nodeType":"48","messageId":"49","endLine":150,"endColumn":10},{"ruleId":"52","severity":1,"message":"53","line":85,"column":1,"nodeType":"54","endLine":85,"endColumn":33},{"ruleId":"46","severity":1,"message":"55","line":165,"column":11,"nodeType":"48","messageId":"49","endLine":165,"endColumn":18},{"ruleId":"56","severity":1,"message":"57","line":184,"column":8,"nodeType":"58","endLine":184,"endColumn":10,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"60","line":191,"column":8,"nodeType":"58","endLine":191,"endColumn":14,"suggestions":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"@typescript-eslint/no-unused-vars","'api' is defined but never used.","Identifier","unusedVar","'HOUR' is assigned a value but never used.","'Box' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'isfirst' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'apiObj' and 'initChart'. Either include them or remove the dependency array.","ArrayExpression",["64"],"React Hook useEffect has a missing dependency: 'responseiveDraw'. Either include it or remove the dependency array.",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [apiObj, initChart]",{"range":"70","text":"71"},"Update the dependencies array to be: [responseiveDraw, size]",{"range":"72","text":"73"},[5283,5285],"[apiObj, initChart]",[5427,5433],"[responseiveDraw, size]"]