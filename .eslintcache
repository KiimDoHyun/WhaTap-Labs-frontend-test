[{"C:\\Users\\bzido\\frontend-test\\src\\index.js":"1","C:\\Users\\bzido\\frontend-test\\src\\App.tsx":"2","C:\\Users\\bzido\\frontend-test\\src\\api.js":"3","C:\\Users\\bzido\\frontend-test\\src\\reportWebVitals.js":"4","C:\\Users\\bzido\\frontend-test\\src\\component\\BarChart.tsx":"5","C:\\Users\\bzido\\frontend-test\\src\\component\\LineChart.tsx":"6","C:\\Users\\bzido\\frontend-test\\src\\component\\InformaticsChart.tsx":"7"},{"size":1348,"mtime":1677390193455,"results":"8","hashOfConfig":"9"},{"size":4969,"mtime":1677493024359,"results":"10","hashOfConfig":"9"},{"size":2502,"mtime":1676886050945,"results":"11","hashOfConfig":"9"},{"size":375,"mtime":1676852251020,"results":"12","hashOfConfig":"9"},{"size":6166,"mtime":1677493024360,"results":"13","hashOfConfig":"9"},{"size":5788,"mtime":1677494539104,"results":"14","hashOfConfig":"9"},{"size":2589,"mtime":1677494693031,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1grk8jl",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bzido\\frontend-test\\src\\index.js",[],"C:\\Users\\bzido\\frontend-test\\src\\App.tsx",["31","32","33"],"C:\\Users\\bzido\\frontend-test\\src\\api.js",["34"],"const DEMO_PROJECT_API_TOCKEN = 'XGJHUSQZTI2AVIENWA27HI5V';\r\nconst DEMO_PROJECT_CODE = 5490;\r\nconst OPEN_API_HEADERS = {\r\n  'x-whatap-pcode': DEMO_PROJECT_CODE,\r\n  'x-whatap-token': DEMO_PROJECT_API_TOCKEN,\r\n};\r\n\r\nconst OPEN_API_ROOT = 'https://api.whatap.io/open/api';\r\n\r\nconst OPEN_API = {\r\n  '': {\r\n    // 몇개 정해서 인포매틱스로?\r\n    act_agent: '활성화 상태의 에이전트 수',\r\n    inact_agent: '비활성화 상태의 에이전트 수',\r\n    host: '호스트 수',\r\n    cpucore: '호스트의 CPU 코어 합',\r\n\r\n    // 트랜잭션 관련\r\n    txcount: '트랜잭션 수',\r\n    tps: '초당 트랜잭션 수',\r\n    actx: '액티브 트랜잭션 수',\r\n\r\n    // 기타\r\n    user: '5분간 집계된 고유 사용자 수',\r\n    rtime: '평균 응답 시간',\r\n    cpu: 'CPU 사용률',\r\n\r\n    // 쓰레드 풀 관련\r\n    threadpool_active: '쓰레드풀 활성 쓰레드 수',\r\n    threadpool_queue: '쓰레드풀 큐잉 쓰레드 수',\r\n\r\n    // DB 관련?\r\n    dbc_count: '전체 DB Connection 수',\r\n    dbc_active: '활성(Active) DB Connection 수',\r\n    dbc_idle: '비활성(Idle) DB Connection 수',\r\n\r\n    // Active 관련?\r\n    act_method: '액티브 Method 수',\r\n    act_sql: '액티브 SQL 수',\r\n    act_httpc: '액티브 HTTP Call 수',\r\n    act_dbc: '액티브 DB Connection 수',\r\n    act_socket: '액티브 Socket 수',\r\n  },\r\n\r\n  // 하나 정해서 라인차트로\r\n  json: {\r\n    'exception/{stime}/{etime}': 'Exception 발생',\r\n    'sql/{stime}/{etime}': 'SQL',\r\n    'httpc/{stime}/{etime}': 'HTTP 외부호출',\r\n    'remote/{stime}/{etime}': 'client IP',\r\n    'transaction/{stime}/{etime}': '트랜잭션',\r\n  },\r\n};\r\nconst getPath = (url, param = {}) => {\r\n  let path = url;\r\n  for (let key in param) {\r\n    path = path.replace(new RegExp('\\\\{' + key + '\\\\}', 'g'), param[key]);\r\n  }\r\n\r\n  return path;\r\n};\r\n\r\nconst getOpenApi = (type) => (key, param) =>\r\n  new Promise((resolve, reject) => {\r\n    if (key in OPEN_API[type]) {\r\n      return resolve({ url: [OPEN_API_ROOT, type, key].filter((path) => !!path).join('/'), name: OPEN_API[type][key] });\r\n    } else {\r\n      reject('잘못된 API 정보');\r\n    }\r\n  }).then(({ url, name }) =>\r\n    fetch(getPath(url, param), {\r\n      headers: OPEN_API_HEADERS,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => ({\r\n        key,\r\n        name,\r\n        data,\r\n      })),\r\n  );\r\n\r\nconst spot = getOpenApi('');\r\nconst series = getOpenApi('json');\r\n\r\nexport default { spot, series };\r\n","C:\\Users\\bzido\\frontend-test\\src\\reportWebVitals.js",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\BarChart.tsx",["35"],"C:\\Users\\bzido\\frontend-test\\src\\component\\LineChart.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\InformaticsChart.tsx",[],{"ruleId":"36","severity":1,"message":"37","line":1,"column":8,"nodeType":"38","messageId":"39","endLine":1,"endColumn":11},{"ruleId":"36","severity":1,"message":"40","line":6,"column":7,"nodeType":"38","messageId":"39","endLine":6,"endColumn":11},{"ruleId":"36","severity":1,"message":"41","line":150,"column":7,"nodeType":"38","messageId":"39","endLine":150,"endColumn":10},{"ruleId":"42","severity":1,"message":"43","line":85,"column":1,"nodeType":"44","endLine":85,"endColumn":33},{"ruleId":"45","severity":1,"message":"46","line":180,"column":8,"nodeType":"47","endLine":180,"endColumn":10,"suggestions":"48"},"@typescript-eslint/no-unused-vars","'api' is defined but never used.","Identifier","unusedVar","'HOUR' is assigned a value but never used.","'Box' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'apiObj'. Either include it or remove the dependency array.","ArrayExpression",["49"],{"desc":"50","fix":"51"},"Update the dependencies array to be: [apiObj]",{"range":"52","text":"53"},[4985,4987],"[apiObj]"]