[{"C:\\Users\\bzido\\frontend-test\\src\\index.js":"1","C:\\Users\\bzido\\frontend-test\\src\\App.tsx":"2","C:\\Users\\bzido\\frontend-test\\src\\api.js":"3","C:\\Users\\bzido\\frontend-test\\src\\reportWebVitals.js":"4","C:\\Users\\bzido\\frontend-test\\src\\component\\Widget.tsx":"5","C:\\Users\\bzido\\frontend-test\\src\\hook\\useResize.tsx":"6","C:\\Users\\bzido\\frontend-test\\src\\component\\Widget\\WidgetModal.tsx":"7","C:\\Users\\bzido\\frontend-test\\src\\page\\Dashboard.tsx":"8","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader.tsx":"9","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\DateBox.tsx":"10","C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\InformaticsChart\\InforMaticsBox.tsx":"11","C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\BarChart.tsx":"12","C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\LineChart.tsx":"13","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\RealTime.tsx":"14","C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\InformaticsChart.tsx":"15","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\CurrentTime.tsx":"16","C:\\Users\\bzido\\frontend-test\\src\\router\\Router.tsx":"17","C:\\Users\\bzido\\frontend-test\\src\\component\\common\\DatePicker\\ListPicker.tsx":"18","C:\\Users\\bzido\\frontend-test\\src\\common\\date.ts":"19","C:\\Users\\bzido\\frontend-test\\src\\store\\DashboardProvider.tsx":"20","C:\\Users\\bzido\\frontend-test\\src\\component\\common\\DatePicker.tsx":"21","C:\\Users\\bzido\\frontend-test\\src\\hook\\useOutsideClick.tsx":"22","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\DatePickerArea.tsx":"23","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\SelectRealTimeRangeArea.tsx":"24","C:\\Users\\bzido\\frontend-test\\src\\hook\\useBoolean.tsx":"25","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\SelectRealTimeListItem.tsx":"26"},{"size":1510,"mtime":1677980089335,"results":"27","hashOfConfig":"28"},{"size":3029,"mtime":1677589808365,"results":"29","hashOfConfig":"28"},{"size":2836,"mtime":1677665228482,"results":"30","hashOfConfig":"28"},{"size":375,"mtime":1676852251020,"results":"31","hashOfConfig":"28"},{"size":6205,"mtime":1678025511620,"results":"32","hashOfConfig":"28"},{"size":1051,"mtime":1677421584514,"results":"33","hashOfConfig":"28"},{"size":1354,"mtime":1677943880713,"results":"34","hashOfConfig":"28"},{"size":1857,"mtime":1678021561863,"results":"35","hashOfConfig":"28"},{"size":2701,"mtime":1678011868365,"results":"36","hashOfConfig":"28"},{"size":568,"mtime":1677644094228,"results":"37","hashOfConfig":"28"},{"size":687,"mtime":1678021522172,"results":"38","hashOfConfig":"28"},{"size":5498,"mtime":1678067767691,"results":"39","hashOfConfig":"28"},{"size":3995,"mtime":1678071665814,"results":"40","hashOfConfig":"28"},{"size":632,"mtime":1677996862551,"results":"41","hashOfConfig":"28"},{"size":782,"mtime":1678026199351,"results":"42","hashOfConfig":"28"},{"size":1024,"mtime":1677811199172,"results":"43","hashOfConfig":"28"},{"size":266,"mtime":1677584294462,"results":"44","hashOfConfig":"28"},{"size":1599,"mtime":1677940983332,"results":"45","hashOfConfig":"28"},{"size":836,"mtime":1677941561117,"results":"46","hashOfConfig":"28"},{"size":949,"mtime":1678013187349,"results":"47","hashOfConfig":"28"},{"size":2097,"mtime":1677940990156,"results":"48","hashOfConfig":"28"},{"size":620,"mtime":1677994206316,"results":"49","hashOfConfig":"28"},{"size":3097,"mtime":1678012136047,"results":"50","hashOfConfig":"28"},{"size":2084,"mtime":1678012908428,"results":"51","hashOfConfig":"28"},{"size":684,"mtime":1678008500241,"results":"52","hashOfConfig":"28"},{"size":1028,"mtime":1678012971654,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1grk8jl",{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\bzido\\frontend-test\\src\\index.js",[],"C:\\Users\\bzido\\frontend-test\\src\\App.tsx",["116","117","118","119"],"import styled from \"styled-components\";\r\nimport Router from \"./router/Router\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nfunction App() {\r\n    // const [actAgent, setActAgent] = useState<any>();\r\n    // const [httpcSeries, setHttpcSeries] = useState<any>();\r\n\r\n    // useEffect(() => {\r\n    //     // api.spot('act_agent').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('inact_agent').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('host').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('cpucore').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('txcount').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('tps').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('actx').then((result) => {console.log(result); setActAgent(result)})\r\n    //     api.spot(\"rtime\").then((result) => {\r\n    //         console.log(result);\r\n    //         setActAgent(result);\r\n    //     });\r\n    //     // api.spot('cpu').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('threadpool_active').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('threadpool_queue').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('dbc_count').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('dbc_active').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('dbc_idle').then((result) => {console.log(result); setActAgent(result)})\r\n    //     // api.spot('act_method').then((result) => {console.log(result); setActAgent(result)})\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <Router />\r\n            {/* <TestArea>\r\n                <TestRow>\r\n                    <TestCol className=\"width10\">\r\n                        <InformaticsChart />\r\n                    </TestCol>\r\n                    <TestCol className=\"width40\">\r\n                        <Widget {...barChartProps} />\r\n                    </TestCol>\r\n                    <TestCol className=\"width50\">\r\n                        <LineChart />\r\n                    </TestCol>\r\n                </TestRow>\r\n            </TestArea> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst TestArea = styled.div`\r\n    width: 100%;\r\n    border: 1px solid;\r\n    box-sizing: border-box;\r\n\r\n    min-width: 1024px;\r\n`;\r\n\r\nconst TestRow = styled.div`\r\n    width: 100%;\r\n    height: 400px;\r\n    display: flex;\r\n    gap: 10px;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n\r\n    .width10 {\r\n        width: 10%;\r\n    }\r\n\r\n    .width40 {\r\n        width: 40%;\r\n    }\r\n\r\n    .width50 {\r\n        width: 50%;\r\n    }\r\n`;\r\nconst TestCol = styled.div`\r\n    height: 100%;\r\n    padding: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Box = styled.div``;\r\n\r\nexport default App;\r\n",["120","121"],"C:\\Users\\bzido\\frontend-test\\src\\api.js",["122"],"const DEMO_PROJECT_API_TOCKEN = \"XGJHUSQZTI2AVIENWA27HI5V\";\r\nconst DEMO_PROJECT_CODE = 5490;\r\nconst OPEN_API_HEADERS = {\r\n    \"x-whatap-pcode\": DEMO_PROJECT_CODE,\r\n    \"x-whatap-token\": DEMO_PROJECT_API_TOCKEN,\r\n};\r\n\r\nconst OPEN_API_ROOT = \"https://api.whatap.io/open/api\";\r\n\r\nexport const OPEN_API = {\r\n    \"\": {\r\n        // 몇개 정해서 인포매틱스로?\r\n        act_agent: \"활성화 상태의 에이전트 수\",\r\n        inact_agent: \"비활성화 상태의 에이전트 수\",\r\n        host: \"호스트 수\",\r\n        cpucore: \"호스트의 CPU 코어 합\",\r\n\r\n        // 트랜잭션 관련\r\n        txcount: \"트랜잭션 수\",\r\n        tps: \"초당 트랜잭션 수\",\r\n        actx: \"액티브 트랜잭션 수\",\r\n\r\n        // 기타\r\n        user: \"5분간 집계된 고유 사용자 수\",\r\n        rtime: \"평균 응답 시간\",\r\n        cpu: \"CPU 사용률\",\r\n\r\n        // 쓰레드 풀 관련\r\n        threadpool_active: \"쓰레드풀 활성 쓰레드 수\",\r\n        threadpool_queue: \"쓰레드풀 큐잉 쓰레드 수\",\r\n\r\n        // DB 관련?\r\n        dbc_count: \"전체 DB Connection 수\",\r\n        dbc_active: \"활성(Active) DB Connection 수\",\r\n        dbc_idle: \"비활성(Idle) DB Connection 수\",\r\n\r\n        // Active 관련?\r\n        act_method: \"액티브 Method 수\",\r\n        act_sql: \"액티브 SQL 수\",\r\n        act_httpc: \"액티브 HTTP Call 수\",\r\n        act_dbc: \"액티브 DB Connection 수\",\r\n        act_socket: \"액티브 Socket 수\",\r\n    },\r\n\r\n    // 하나 정해서 라인차트로\r\n    json: {\r\n        \"exception/{stime}/{etime}\": \"Exception 발생\",\r\n        \"sql/{stime}/{etime}\": \"SQL\",\r\n        \"httpc/{stime}/{etime}\": \"HTTP 외부호출\",\r\n        \"remote/{stime}/{etime}\": \"client IP\",\r\n        \"transaction/{stime}/{etime}\": \"트랜잭션\",\r\n    },\r\n};\r\nconst getPath = (url, param = {}) => {\r\n    let path = url;\r\n    for (let key in param) {\r\n        path = path.replace(new RegExp(\"\\\\{\" + key + \"\\\\}\", \"g\"), param[key]);\r\n    }\r\n\r\n    return path;\r\n};\r\n\r\nconst getOpenApi = (type) => (key, param) =>\r\n    new Promise((resolve, reject) => {\r\n        if (key in OPEN_API[type]) {\r\n            return resolve({\r\n                url: [OPEN_API_ROOT, type, key]\r\n                    .filter((path) => !!path)\r\n                    .join(\"/\"),\r\n                name: OPEN_API[type][key],\r\n            });\r\n        } else {\r\n            reject(\"잘못된 API 정보\");\r\n        }\r\n    }).then(({ url, name }) =>\r\n        fetch(getPath(url, param), {\r\n            headers: OPEN_API_HEADERS,\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => ({\r\n                key,\r\n                name,\r\n                data,\r\n            }))\r\n    );\r\n\r\nconst spot = getOpenApi(\"\");\r\nconst series = getOpenApi(\"json\");\r\n\r\nexport default { spot, series };\r\n",["123","124"],"C:\\Users\\bzido\\frontend-test\\src\\reportWebVitals.js",[],["125","126"],"C:\\Users\\bzido\\frontend-test\\src\\component\\Widget.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\hook\\useResize.tsx",["127"],"import React, { RefObject, useState, useEffect } from \"react\";\r\nimport debounce from \"lodash/debounce\";\r\n\r\nconst useResize = (ref: RefObject<HTMLDivElement>) => {\r\n    const [state, setState] = useState({ width: 0, height: 0 });\r\n\r\n    useEffect(() => {\r\n        /*\r\n        resize 마다 이벤트를 발생시켜 svg를 매번 다시 그리면 요구되는 작업량이 많기 때문에\r\n        debounce로 과도한 요청을 방지한다.\r\n\r\n        디바운스 단위시간: 0.3초\r\n        */\r\n        const getSize = debounce(() => {\r\n            if (!ref || !ref.current) {\r\n                return;\r\n            }\r\n            const width = ref.current.offsetWidth;\r\n            const height = ref.current.offsetHeight;\r\n            setState({\r\n                width,\r\n                height,\r\n            });\r\n        }, 300);\r\n\r\n        window.addEventListener(\"resize\", getSize);\r\n        getSize();\r\n        return () => window.removeEventListener(\"resize\", getSize);\r\n    }, [ref]);\r\n    return state;\r\n};\r\n\r\nexport default useResize;\r\n",["128","129"],"C:\\Users\\bzido\\frontend-test\\src\\component\\Widget\\WidgetModal.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\page\\Dashboard.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\DateBox.tsx",[],["130","131"],"C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\InformaticsChart\\InforMaticsBox.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\BarChart.tsx",["132","133"],"C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\LineChart.tsx",["134"],"import {\r\n    axisBottom,\r\n    axisLeft,\r\n    line,\r\n    max,\r\n    ScaleLinear,\r\n    scaleLinear,\r\n    ScaleTime,\r\n    scaleTime,\r\n    select,\r\n} from \"d3\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useResize from \"../../hook/useResize\";\r\nimport { ChartPropsType, dataSourceType } from \"../../types/chart\";\r\n\r\nconst data: any = [];\r\n\r\nconst margin = { top: 20, right: 20, bottom: 20, left: 40 };\r\n\r\nconst yAxis = {\r\n    transform: `translate(${margin.left}, ${margin.bottom})`,\r\n};\r\n\r\nconst lineStyle = {\r\n    fill: \"none\",\r\n    stroke: \"blue\",\r\n    strokeWidth: \"1px\",\r\n    transform: `translate(${margin.left}, ${margin.bottom})`,\r\n};\r\n\r\nconst Chart = React.memo(({ svgRef }: ChartPropsType) => {\r\n    console.log(\"차트 리렌더링\");\r\n    return (\r\n        <svg ref={svgRef}>\r\n            <g className=\"y-axis\" {...yAxis} />\r\n            <g className=\"x-axis\" />\r\n            <path className=\"line\" {...lineStyle} />\r\n        </svg>\r\n    );\r\n});\r\n\r\nconst LineChart = ({ dataSource, startDate, endDate, dif, callCycle }: any) => {\r\n    const svgRef = useRef(null);\r\n    const svgParentBoxRef = useRef(null);\r\n    const size = useResize(svgParentBoxRef);\r\n\r\n    const getMax = () => max(data, (d: dataSourceType) => d.data);\r\n\r\n    const createYScale = (height: number) => {\r\n        return scaleLinear().domain([0, getMax()]).range([height, 0]);\r\n    };\r\n    const drawXAxis = (\r\n        svg: any,\r\n        height: number,\r\n        xScale: ScaleTime<number, number, never>\r\n    ) => {\r\n        svg.select(\".x-axis\")\r\n            .transition()\r\n            .attr(\r\n                \"transform\",\r\n                `translate(${margin.left}, ${height + margin.bottom})`\r\n            )\r\n            .call(axisBottom(xScale));\r\n    };\r\n\r\n    const drawyAxis = (\r\n        svg: any,\r\n        yScale: ScaleLinear<number, number, never>\r\n    ) => {\r\n        svg.select(\".y-axis\").call(axisLeft(yScale).ticks(5));\r\n    };\r\n\r\n    const drawLine = (\r\n        svg: any,\r\n        xScale: ScaleTime<number, number, never>,\r\n        yScale: ScaleLinear<number, number, never>,\r\n        width: number\r\n    ) => {\r\n        const myLine: any = line()\r\n            .x((d, i: any) => {\r\n                const xPos =\r\n                    xScale(endDate) -\r\n                    ((xScale(startDate) + data.length - i) * width) /\r\n                        (dif / callCycle);\r\n\r\n                return xPos;\r\n            })\r\n            .y((d: any) => yScale(d.data || 0));\r\n\r\n        svg.select(\".line\").datum(data).attr(\"d\", myLine);\r\n    };\r\n\r\n    const renderChart = (parentWidth: any, parentHeight: any) => {\r\n        const svg: any = select(svgRef.current);\r\n\r\n        const width = parentWidth - margin.left - margin.right;\r\n        const height = parentHeight - margin.top - margin.bottom;\r\n\r\n        const xScale = scaleTime()\r\n            .domain([startDate, endDate])\r\n            .range([0, width]);\r\n        drawXAxis(svg, height, xScale);\r\n\r\n        const yScale = createYScale(height);\r\n        drawyAxis(svg, yScale);\r\n\r\n        drawLine(svg, xScale, yScale, width);\r\n    };\r\n\r\n    useEffect(() => {\r\n        data.push(dataSource[0]);\r\n    }, [dataSource]);\r\n\r\n    useEffect(() => {\r\n        if (dif === 0 || callCycle === 0) return;\r\n\r\n        while (data.length >= dif / callCycle) {\r\n            data.shift();\r\n        }\r\n    }, [dataSource, dif, callCycle]);\r\n\r\n    // 데이터 바인딩\r\n    useEffect(() => {\r\n        const { width, height } = size;\r\n\r\n        svgRef.current.style.width = width;\r\n        svgRef.current.style.height = height;\r\n\r\n        renderChart(width, height);\r\n    }, [startDate, endDate, dif, callCycle, size]);\r\n\r\n    return (\r\n        <LineChartBox ref={svgParentBoxRef}>\r\n            <Chart svgRef={svgRef} />\r\n        </LineChartBox>\r\n    );\r\n};\r\n\r\nconst LineChartBox = styled.div`\r\n    width: 100%;\r\n\r\n    min-width: 250px;\r\n    min-height: 300px;\r\n\r\n    position: relative;\r\n`;\r\n\r\nexport default LineChart;\r\n","C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\RealTime.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\chart\\InformaticsChart.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\CurrentTime.tsx",[],["135","136"],"C:\\Users\\bzido\\frontend-test\\src\\router\\Router.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\common\\DatePicker\\ListPicker.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\common\\date.ts",[],"C:\\Users\\bzido\\frontend-test\\src\\store\\DashboardProvider.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\common\\DatePicker.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\hook\\useOutsideClick.tsx",["137"],"C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\DatePickerArea.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\SelectRealTimeRangeArea.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\hook\\useBoolean.tsx",[],"C:\\Users\\bzido\\frontend-test\\src\\component\\Dashboard\\DashboardHeader\\SelectRealTimeListItem.tsx",[],{"ruleId":"138","severity":1,"message":"139","line":49,"column":7,"nodeType":"140","messageId":"141","endLine":49,"endColumn":15},{"ruleId":"138","severity":1,"message":"142","line":57,"column":7,"nodeType":"140","messageId":"141","endLine":57,"endColumn":14},{"ruleId":"138","severity":1,"message":"143","line":77,"column":7,"nodeType":"140","messageId":"141","endLine":77,"endColumn":14},{"ruleId":"138","severity":1,"message":"144","line":83,"column":7,"nodeType":"140","messageId":"141","endLine":83,"endColumn":10},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":90,"column":1,"nodeType":"151","endLine":90,"endColumn":33},{"ruleId":"145","replacedBy":"152"},{"ruleId":"147","replacedBy":"153"},{"ruleId":"145","replacedBy":"154"},{"ruleId":"147","replacedBy":"155"},{"ruleId":"138","severity":1,"message":"156","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"145","replacedBy":"154"},{"ruleId":"147","replacedBy":"155"},{"ruleId":"145","replacedBy":"157"},{"ruleId":"147","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":162,"column":8,"nodeType":"161","endLine":162,"endColumn":10,"suggestions":"162"},{"ruleId":"159","severity":1,"message":"163","line":174,"column":8,"nodeType":"161","endLine":174,"endColumn":26,"suggestions":"164"},{"ruleId":"159","severity":1,"message":"163","line":131,"column":8,"nodeType":"161","endLine":131,"endColumn":50,"suggestions":"165"},{"ruleId":"145","replacedBy":"166"},{"ruleId":"147","replacedBy":"167"},{"ruleId":"159","severity":1,"message":"168","line":18,"column":8,"nodeType":"161","endLine":18,"endColumn":13,"suggestions":"169"},"@typescript-eslint/no-unused-vars","'TestArea' is assigned a value but never used.","Identifier","unusedVar","'TestRow' is assigned a value but never used.","'TestCol' is assigned a value but never used.","'Box' is assigned a value but never used.","no-native-reassign",["170"],"no-negated-in-lhs",["171"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["170"],["171"],["170"],["171"],"'React' is defined but never used.",["170"],["171"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataSource' and 'renderChart'. Either include them or remove the dependency array.","ArrayExpression",["172"],"React Hook useEffect has a missing dependency: 'renderChart'. Either include it or remove the dependency array.",["173"],["174"],["170"],["171"],"React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["175"],"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [dataSource, renderChart]",{"range":"184","text":"185"},"Update the dependencies array to be: [size, dataSource, renderChart]",{"range":"186","text":"187"},"Update the dependencies array to be: [startDate, endDate, dif, callCycle, size, renderChart]",{"range":"188","text":"189"},"Update the dependencies array to be: [callback, ref]",{"range":"190","text":"191"},[4745,4747],"[dataSource, renderChart]",[5073,5091],"[size, dataSource, renderChart]",[3624,3666],"[startDate, endDate, dif, callCycle, size, renderChart]",[553,558],"[callback, ref]"]